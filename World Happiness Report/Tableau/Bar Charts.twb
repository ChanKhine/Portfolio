<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2015.csv (Multiple Connections)' inline='true' name='federated.0nf7qv61vq5nyl1397gh4100jdcz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2015' name='textscan.0y50yax1l2x12u12a2z7r0fucmk7'>
            <connection class='textscan' directory='/Users/zhangailin/Desktop/Report 0/World Happiness Report (not clean)' filename='2015.csv' password='' server='' />
          </named-connection>
          <named-connection caption='2016' name='textscan.1drg2m90lr407c1b4q9de0pe96si'>
            <connection class='textscan' directory='/Users/zhangailin/Desktop/Report 0/World Happiness Report (not clean)' filename='2016.csv' password='' server='' />
          </named-connection>
          <named-connection caption='2017' name='textscan.03xv7wz1c4z5hf1csoimz04tapsq'>
            <connection class='textscan' directory='/Users/zhangailin/Desktop/Report 0/World Happiness Report (not clean)' filename='2017.csv' password='' server='' />
          </named-connection>
          <named-connection caption='2018' name='textscan.14x3rbe0rtjc6m14bq9ju0in13pu'>
            <connection class='textscan' directory='/Users/zhangailin/Desktop/Report 0/World Happiness Report (not clean)' filename='2018.csv' password='' server='' />
          </named-connection>
          <named-connection caption='2019' name='textscan.0es0qhf1nkmcif1g60v5o0svrmkt'>
            <connection class='textscan' directory='/Users/zhangailin/Desktop/Report 0/World Happiness Report (not clean)' filename='2019.csv' password='' server='' />
          </named-connection>
          <named-connection caption='2020' name='textscan.0iu0yul0z3l1ie14br6280cyjlaq'>
            <connection class='textscan' directory='/Users/zhangailin/Desktop/Report 0/World Happiness Report (not clean)' filename='2020.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0y50yax1l2x12u12a2z7r0fucmk7' name='2015.csv' table='[2015#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='real' name='Standard Error' ordinal='4' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
            <column datatype='real' name='Family' ordinal='6' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
            <column datatype='real' name='Freedom' ordinal='8' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
            <column datatype='real' name='Generosity' ordinal='10' />
            <column datatype='real' name='Dystopia Residual' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0y50yax1l2x12u12a2z7r0fucmk7' name='2015.csv' table='[2015#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='real' name='Standard Error' ordinal='4' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
            <column datatype='real' name='Family' ordinal='6' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
            <column datatype='real' name='Freedom' ordinal='8' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
            <column datatype='real' name='Generosity' ordinal='10' />
            <column datatype='real' name='Dystopia Residual' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard Error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard Error]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Standard Error</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[2015.csv]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2015.csv' datatype='table' name='[__tableau_internal_object_id__].[2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2015.csv' id='2015.csv_C1776270CBD74A98B1836E5E9E8A4F7A'>
            <properties context=''>
              <relation connection='textscan.0y50yax1l2x12u12a2z7r0fucmk7' name='2015.csv' table='[2015#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='integer' name='Happiness Rank' ordinal='2' />
                  <column datatype='real' name='Happiness Score' ordinal='3' />
                  <column datatype='real' name='Standard Error' ordinal='4' />
                  <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
                  <column datatype='real' name='Family' ordinal='6' />
                  <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
                  <column datatype='real' name='Freedom' ordinal='8' />
                  <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
                  <column datatype='real' name='Generosity' ordinal='10' />
                  <column datatype='real' name='Dystopia Residual' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Clean Data (Clean Data WHR)' inline='true' name='federated.1o5s7d00qwyej11fdso950724fb8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clean Data WHR' name='excel-direct.0qt1gpt0lcboaw1cu8yqu1ua2kuw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mac/Desktop/Brandeis/Viz/Report/2/Clean Data WHR.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0qt1gpt0lcboaw1cu8yqu1ua2kuw' name='Clean Data' table='[&apos;Clean Data$&apos;]' type='table'>
          <columns gridOrigin='A1:I1565:no:A1:I1565:0' header='yes' outcome='2'>
            <column datatype='string' name='Years' ordinal='0' />
            <column datatype='real' name='Generosity' ordinal='1' />
            <column datatype='string' name='Happiness_Rank' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='real' name='Happiness_Score' ordinal='4' />
            <column datatype='real' name='GDP_per_Capita' ordinal='5' />
            <column datatype='real' name='Life_Expectancy' ordinal='6' />
            <column datatype='real' name='Freedom' ordinal='7' />
            <column datatype='real' name='Government_Corruption' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0qt1gpt0lcboaw1cu8yqu1ua2kuw' name='Clean Data' table='[&apos;Clean Data$&apos;]' type='table'>
          <columns gridOrigin='A1:I1565:no:A1:I1565:0' header='yes' outcome='2'>
            <column datatype='string' name='Years' ordinal='0' />
            <column datatype='real' name='Generosity' ordinal='1' />
            <column datatype='string' name='Happiness_Rank' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='real' name='Happiness_Score' ordinal='4' />
            <column datatype='real' name='GDP_per_Capita' ordinal='5' />
            <column datatype='real' name='Life_Expectancy' ordinal='6' />
            <column datatype='real' name='Freedom' ordinal='7' />
            <column datatype='real' name='Government_Corruption' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I1565:no:A1:I1565:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_Rank</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Happiness_Rank]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Happiness_Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness_Score]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Happiness_Score</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP_per_Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP_per_Capita]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>GDP_per_Capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life_Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life_Expectancy]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Life_Expectancy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government_Corruption]</local-name>
            <parent-name>[Clean Data]</parent-name>
            <remote-alias>Government_Corruption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Clean Data' datatype='table' name='[__tableau_internal_object_id__].[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/mac/Documents/My Tableau Repository/Datasources/Clean Data (Clean Data WHR).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/18/2023 01:04:15 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Clean Data (Clean Data WHR)' increment-value='%null%' refresh-type='create' rows-inserted='1564' timestamp-start='2023-01-18 01:04:15.316' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Years</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Years</remote-alias>
              <ordinal>0</ordinal>
              <family>Clean Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>1</ordinal>
              <family>Clean Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>660</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_Rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Happiness_Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness_Rank</remote-alias>
              <ordinal>2</ordinal>
              <family>Clean Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>158</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>3</ordinal>
              <family>Clean Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>163</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness_Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness_Score</remote-alias>
              <ordinal>4</ordinal>
              <family>Clean Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>715</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP_per_Capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP_per_Capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP_per_Capita</remote-alias>
              <ordinal>5</ordinal>
              <family>Clean Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>737</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life_Expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life_Expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life_Expectancy</remote-alias>
              <ordinal>6</ordinal>
              <family>Clean Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>705</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom</remote-alias>
              <ordinal>7</ordinal>
              <family>Clean Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Government_Corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Government_Corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Government_Corruption</remote-alias>
              <ordinal>8</ordinal>
              <family>Clean Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>630</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somaliland Region&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong S.A.R., China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Clean Data' id='Clean Data_36C3D84D1B9D4073B9AA8F020ACD8ADC'>
            <properties context=''>
              <relation connection='excel-direct.0qt1gpt0lcboaw1cu8yqu1ua2kuw' name='Clean Data' table='[&apos;Clean Data$&apos;]' type='table'>
                <columns gridOrigin='A1:I1565:no:A1:I1565:0' header='yes' outcome='2'>
                  <column datatype='string' name='Years' ordinal='0' />
                  <column datatype='real' name='Generosity' ordinal='1' />
                  <column datatype='string' name='Happiness_Rank' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                  <column datatype='real' name='Happiness_Score' ordinal='4' />
                  <column datatype='real' name='GDP_per_Capita' ordinal='5' />
                  <column datatype='real' name='Life_Expectancy' ordinal='6' />
                  <column datatype='real' name='Freedom' ordinal='7' />
                  <column datatype='real' name='Government_Corruption' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Stacked Bars Chart:'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Happiness Score </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Clean Data (Clean Data WHR)' name='federated.1o5s7d00qwyej11fdso950724fb8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1o5s7d00qwyej11fdso950724fb8'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness_Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Years]' role='dimension' type='nominal' />
            <column-instance column='[Happiness_Score]' derivation='Avg' name='[avg:Happiness_Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1o5s7d00qwyej11fdso950724fb8].[none:Years:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1o5s7d00qwyej11fdso950724fb8].[avg:Happiness_Score:qk]</rows>
        <cols>[federated.1o5s7d00qwyej11fdso950724fb8].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{EF7C7658-F945-4C02-881E-FBFA779E5D0E}' />
    </worksheet>
    <worksheet name='horizontal chart: '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Overall Metrics Comparisons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Clean Data (Clean Data WHR)' name='federated.1o5s7d00qwyej11fdso950724fb8' />
          </datasources>
          <datasource-dependencies datasource='federated.1o5s7d00qwyej11fdso950724fb8'>
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP_per_Capita]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government_Corruption]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness_Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life_Expectancy]' role='measure' type='quantitative' />
            <column datatype='string' name='[Years]' role='dimension' type='nominal' />
            <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP_per_Capita]' derivation='Avg' name='[avg:GDP_per_Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government_Corruption]' derivation='Avg' name='[avg:Government_Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness_Score]' derivation='Avg' name='[avg:Happiness_Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life_Expectancy]' derivation='Avg' name='[avg:Life_Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1o5s7d00qwyej11fdso950724fb8].[avg:Happiness_Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1o5s7d00qwyej11fdso950724fb8].[avg:Life_Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1o5s7d00qwyej11fdso950724fb8].[avg:GDP_per_Capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1o5s7d00qwyej11fdso950724fb8].[avg:Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#86bcb6' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1o5s7d00qwyej11fdso950724fb8].[avg:Government_Corruption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o5s7d00qwyej11fdso950724fb8].[none:Years:nk]</rows>
        <cols>([federated.1o5s7d00qwyej11fdso950724fb8].[avg:Happiness_Score:qk] + ([federated.1o5s7d00qwyej11fdso950724fb8].[avg:Life_Expectancy:qk] + ([federated.1o5s7d00qwyej11fdso950724fb8].[avg:GDP_per_Capita:qk] + ([federated.1o5s7d00qwyej11fdso950724fb8].[avg:Freedom:qk] + [federated.1o5s7d00qwyej11fdso950724fb8].[avg:Government_Corruption:qk]))))</cols>
      </table>
      <simple-id uuid='{1EE508D2-F9D3-41C9-B156-74F92542E8C9}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='horizontal chart: '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o5s7d00qwyej11fdso950724fb8].[none:Country:nk]</field>
            <field>[federated.1o5s7d00qwyej11fdso950724fb8].[none:Happiness Rank:nk]</field>
            <field>[federated.1o5s7d00qwyej11fdso950724fb8].[none:Years:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{F7863DE9-9CC6-4F85-8E67-3375BF3076BC}' />
    </window>
    <window class='worksheet' name='Stacked Bars Chart:'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1o5s7d00qwyej11fdso950724fb8].[none:Years:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o5s7d00qwyej11fdso950724fb8].[none:Years:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63E31DFC-D993-42B9-9B2A-337D9C34016B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Stacked Bars Chart:' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3Qc13k3/u/MznYssOhYVIIACBIESAJgJ8ROiaQoWdWRZFuOk5hxEttR
      nMhWXCSXJLYTO3F5rZzXsU9+cVVexRIpUywmxU5RJAgWsIAgQTSiLjq2l5n5/YHsCMsC3AF2
      ibLP5xweCbv3ztyd9szcNpwsyzIIIYTEHH6qC0AIIWRqUAAghJAYRQGAEEJiFAUAQgiJURQA
      CCEkRlEAIISQGEUBgBBCYhQFAEIIiVEUAAghJEZRACCEkBglTHUBCCGxIxgM4tChQzh69CgA
      4LnnnsOSJUsmvVyHw4HW1laUlJSA47hJLy9W0BMAIeSBkGUZb775Jn76059izZo1qKqqwtDQ
      kPK91+tFIBBgXpbP54MkSQCAxsZG/Ou//itEUYxK2WcrjiaDI4Q8CB6PBy+88AK+9KUvYeXK
      lQBGLuSBQACvv/46Tp48CY7j8Od//ufYtGkTXnrpJbz00kvIz8/HP/3TP2HTpk1YuHAhPvOZ
      z8Bms+HmzZvIycnByy+/jK9+9atoamrC3Llz8eijj8Jms+H999+H1WpFXV0dcnNzkZqaio9/
      /OOw2+34xje+gW9/+9tISEiY4q0ytegJgBDyQHi9XrhcLhQVFSmfcRyHc+fO4ezZs/jhD3+I
      l19+Ga+//joGBgbQ0dEBv98PALDb7fB4PJAkCZ2dnXj88cfxne98B01NTZAkCZ/61KcwZ84c
      /OM//iO2bdsGl8uFAwcO4NatW/jUpz6F1atXY/fu3fD7/Th+/DiSkpIQHx8/VZti2qA2AELI
      A6HRaJQ7/tHq6+uxbNkyZGZmIjMzE1qtFna7/b7LMZlMKCsrg8FggMFgAMdxSEpKgk6nQ0ZG
      BgRh5LKWl5eHb3zjGzAajfB4PDAYDKiursaRI0fwiU98gtoKQE8AhJAHxGg0Ij8/H/v27YMs
      y0o9fmJiIrq6uiDLMlwuF7xeL4xGI2RZhiRJStqx8DwPr9eLYDCofJaeng6j0aise+vWrfjZ
      z36Gvr4+VFRURPW3zhT0BEAIeSAEQcDnPvc5fOMb38CZM2cAAFVVVdi2bRveeOMNvPrqq+ju
      7kZlZSVycnKQnp6Of/7nf4bFYkFtbS2efPLJu+7aOY4Dx3HIysrCwMAAvvzlL2Pr1q33vLvf
      tm0bfvazn+HJJ5+ETqd7IL95uqNGYELIA9Xb24v6+noAwMKFC2G1WtHT04OamhqYzWYsX74c
      er0eXV1duHDhArKzs6HT6ZCeng6LxYJr165hwYIF4HkedXV1KCgogF6vR3NzM27evIl58+Yh
      Pj4eg4ODmDt3rrJen8+Hj3/843jttddQWlo6VT9/WqEAQAiZ9W7cuIF/+Id/QHFxMV555RVo
      NJqpLtK0QAGAEDLruVwudHR0IC8vj6p/RqEAQAghMWpG9wIa3eJPCCFEnRkdAAghhEwcBQBC
      CIlRFAAIISRGUQAghJAYRQGAEEJiFAUAQgiJURQACCEkRlEAIISQGEUBgBBCYhQFAEIIiVEU
      AAghJEZRACCEkBhFAYAQQmIUBQBCCIlRFAAIISRGUQAghJAYRQGAEEJiFAUAQgiJURQACCEk
      RglTXQAy8/31j/ahq9/FnP6XX3kSOq0miiUihLCgAEAmzesX4fUHmdPLkKNYGkIIK6oCIoSQ
      GEUBgBBCYhRVAZEp99RX/5u5UijJYsTPv/R4VMtDSKygAECmnCixtwlIKtISQsZGVUCEEBKj
      KAAQQkiMogBACCExigIAIYTEKGoEJmSGcnsD+L/v1DCnT7Wa8PGHF0WxRGSmoQBAyAzlD4o4
      erGZOX2+zUoBgIShKiBCCIlRFAAIISRGUQAghJAYRQGAEEJiFAUAQgiJURQACCEkRlE3UEII
      ecB8gSD++TfvM6dPTjDiL59YFvFyUAAghJAHTJJknKvvYE6flWKJSjmoCogQQmIUBQBCCIlR
      FAAIISRGURvALDDo9MLl9TOnT7IYYdRro1giQshMQAFgFnjjvSvYd6aBOf3ff7wKK0uyo1gi
      QshMQFVAhBASoygAEEJIjKIAQAghMYoCACGExCgKAIQQEqMoABBCSIyiAEAIITGKAgAhhMQo
      CgCEEBKjpnQksCzLkCQJsiyD53nw/IfxSBRFyLIMjUYDjuOmsJRkNgsERYiSzJxeJ2jA83Q8
      ktlhygKALMt4//33UV9fD1mWodVqsX37dqSkpKClpQV/+MMfIMsySktLsWrVKgoCJCr+9f+d
      xvtX2pjTf/fPN2N+XkoUS0TIgzOlTwB5eXlYsmQJ9Ho9rl69ihMnTmDHjh3Yv38/nnjiCSQk
      JOAXv/gFCgsLkZaWNpVFJYSQWWfKAgDHccjOHpmQzO/3o729HRkZGXA6nTAYDEhLSwPHcSgt
      LUVzc/M9A4AsywgGgw+66NOOJLNXYQCAJEoR3m7q1i8GRQQn+EAnI7L7XFZR/QMAoiROm2NO
      FEVV6el8mT6CavddhI/7kCl9AvD7/XjjjTfQ3NyMefPmYcuWLejr64PJZFKqfKxWKzo7OwEA
      wWAwbCOE2g5inSxJqtJLkqj64jHm+tVdQyGKIsRJ7LZIll1t8BTFyG67yVBdDjmy245MnBic
      HvtuSgOATqfD888/j8HBQZw+fRrHjh1DRUUFvF4vZFkGx3EYHh6G2WweKawgQBA+LHIwGAz7
      O1ZpNBpV6QWtFnq9PmLrV9s+o9ProNdObL9x4CJado1GXSTSaXURXf9k6ALqghfHR3bbkYmT
      VHbA5Ljo7Lspu30OBoO4evUq/H4/4uPjMX/+fHR2diI+Ph5erxdtbW1wOp24ePEiioqKpqqY
      hBAya01pG0BnZyfOnj0LjUYDQRCwfft2CIKAxx57DPv27YMoilixYgWSkpKmqpiEEDJrTVkA
      0Gg02Lx5M0RRhCRJEARBqUrIyMjAJz/5SUiSROMACCEkSqa8Al2j0dyzDvvOgWFk+vozyx54
      g53M6QU8iWlw6JEZ7u0T13H5Vjdz+k88sgj5tsQolmjmobOQTNoCbQtk/W3m9DynstsQIffQ
      3DmAmhvsNx4feWh+FEszM9EtNiGExCh6AiBT7jnze8xpjSYrgI9ErzCExBAKABFQ19KDXx+8
      zJx++YIsPL6mOIolmll2mE4zp+WMqVEsCSGxJSIBQJIk2O12tLe3o7i4GHa7Hbm5uTEzSGvY
      5cPlRjtz+uzU+CiWhhBC2ETkCr1//37s2rULPp8Pr7zyCt566y089dRTWLBgQSQWT8isdeJS
      C4KM8xFpeA5rF+dFuUQklkQkAPz+97/Hd7/7XezevRvAyCyfLS0tFAAIGcdPdlXD42Ob5Mug
      EygAkIiKSAAwGo1hE7bV1NTgueeei8SiCSH3Yea8eM36n8zpjZYCAFujVyAy40QkAHz2s5/F
      97//fXR3d2PPnj2oqqpCeXl5JBZNCLkPDSeiSNvOnJ4X4qJYGjITRSQAuFwufPOb31SmbkhM
      TKTpGwghZJqLyECw//mf/8HRo0eRkpKCpKQkuvgTQsgMEJEA8IlPfAInT57E2bNn0d3dje7u
      bvh8vkgsmhBCSJREpApo165d6O/vx+uvv6589vLLL6O0tDQSiyeEEBIFEQkAX/jCFyBJEkRR
      BMdxYVM7E0IImZ4iEgC6u7vx4x//GM3NzdBoNPjIRz6CJ598UvWrCgkhhDw4EQkAP/rRj7Bs
      2TJ84QtfgNfrxb/8y78gJycHK1asiMTiCSFk1jFw7O2kes4QlTJEJADY7XasW7cOycnJAICV
      K1eipaWFAgCJus4+B3oG3czpc9LikWgxRrFEhIzPwPnxs5R/YU7PJc4B8ETEyxGRAFBRUYEf
      /OAHePjhhzEwMID9+/fjtddei8SiCRnTH6ob8dbxOub0Lz27EhvK50SvQITMIBEJAJ/+9Kex
      f/9+HDx4EHFxcfja176GuXPnRmLRhBBCoiQiAaC6uhrLly/H448/DgA4fPgwEhMTlSohEl3P
      mI/i4aS3mdOn6zIBZEevQIQw8PqD8PnZJsIDAKNeC502ch1Lvv3rk7jV3s+c/rt/vhnJCaaI
      rX86iEgAeOONN/Dqq68qfzc3NyMYDOLhhx+OxOLJOOI4D/SaIeb0OrCfdIREy9snruON964w
      p//LJ5bikeWFEVv/gMOjqv1IZJy2eyaJyEhgrVaLpqYmiKIIr9eLW7duwWKxRGLRhBBCoiQi
      TwB/9md/hu985zuIi4uD0+lEWVkZKisrI7FoQgghURKRALBgwQK8/vrraGtrg8lkQlZWFg0C
      I4SQaW5SVUBdXV14++23IcsyzGYzTp8+je985zt49913IUlSpMpICCEkCiYVAA4cOACHwwGO
      43Dy5EmcOHECf/EXf4F3330XN2/ejFQZCSGERMGkqoB6enqwYsUKyLKMPXv24JlnnkFZWRkW
      L16MlpYWFBcXR6qchETFk6YTWJtwijl9lrAYQEr0CkTIAzSpAFBSUoJDhw7B5XLh5s2b+NrX
      vgYAuH37NpYuXRqRAhISTTmCHTZdM3N6k4r5WwiZ7iYVADZt2gS73Y7jx4/jlVdegdlshsvl
      gk6nw/z58yNVRkIIIVEwqQCg1+vxyU9+EgCU+f9NJhNeffVV1NfXw2q1IjMzc/KlJIQQEnGT
      HgjGcVzYy184joNGo0FDQwN6enomu3hCCCFREpGRwIQQQmaeiAwEm+mcHj9OX7nNnD45wYSK
      ebYologQQqKPAgCAviE3/s/b1czplxRmUAAghMx4UQsAFosFer0+WosnhMS4p83HsMl6iDn9
      XKEYQHr0CvQAybIMWc3kpBzAj2qrDYlIAGhpaUFcXByMRiPefvttJCUlYcuWLRAEesAghERH
      qmYIidou5vRq3sE73TV1DuJv/s8B5vSVxTa8+sl1d30ekSv0f/zHf+CP//iPcezYMdy4cQNu
      txvp6emoqKiIxOIJmbZO1LZg2MV+Ydm8dC70WroxItNDRI5Et9uNxMREnD59Gjt37sTly5fR
      3t4eMwFgjtCFnZZ3mNPnGTYDoJHSs8HvjtWhqXOQOf2aslwKAGTaiMiRWFBQgNdeew2iKCI3
      Nxdvvvkmtm/fHolFzwhJ/DDWGmqZ02uFBVEsDSGEsIlIANi5cyeuXbuGvLw86HQ6bN26FSUl
      JZFYNCGEkCiJSAC4cuUKUlJSIMsyvv3tbyMlJQULFy6MxKIJmdUeNlYjwHuZ0mp1egDPRLdA
      JKZE7KXwn/3sZ7F7924kJiaip6cH586dw5o1ayKxeEJmrWdNRwGtiy2x1hTVspDYE5EAIIoi
      NBoNLl68iJdeegnV1dUYHGRvGCNT6wdvfoBrzezzNr32x+uQlRqv/C2LGkgBFa8AVdN/mRAS
      NREJAMuWLcPLL7+M/Px8ZGdn46c//SlefPHFSCyaPAADTi+6BxjvQgEExfDXfTquFCLYHX+f
      1HezyDzuHpJCCHnQIhIAnnnmGWzcuBF6vR48z+Pzn/88UlNTI7FoQgghURKRANDT04Of//zn
      aGlpwd///d9j3759ePbZZykIECbO+jlgrRfircmIi2ppCIkdEQkAP/jBD7Bp0yYkJibC6/VC
      r9ejrq6OAgBhEhhkrz7ScJYoloSQ2BKRADA0NIRVq1ahvb0dAOD1euH1snVtI2QysoUeVOrq
      mdMn8zQIj5CQiASAtWvX4pvf/CZ8Ph9aWlpw8+ZNPP3005FYNCFjqtLXYnnCm8zpDdoKAIuj
      VyAyY2wynMciUyNzehO3BYA5egWaAhEJAB/96Ecxf/58XLt2DTqdDjt37kRGRkYkFk0IuQ85
      qIHjej5zeq0ze5ZdvianylALyXyJOb2Jnz2ziYZEJAAMDg7C4XAoL4C/fv069Ho9kpKSxs0b
      DAbh8Xig1+uh0+mUzz0eD0RRhNlsDnvnMCHkf8kcgkPsbSKclQaSkXARCQDf+ta3wHEcUlJS
      lM/mzJkzZgCQZRnXr1/HiRMnoNPp4HK58NhjjyE3Nxf19fU4cuQItFotcnNzsXnzZgoChMwy
      ORo7VuqvMKdP1xREsTSxpWfQjbqWnsgEAEmS8MUvfhHZ2dmq8jkcDjz//PMwm83o6OjAsWPH
      8Oyzz+Lw4cN44YUXEBcXh1/84hfo7OxUni4IIbPDMv11LI7fxZxer1sMYFn0ChRDbrb14fv/
      fToyAWDJkiU4ffo0Kisrlc8yMjJgMt3/kZPjOCxfvhzAyNNAU1MTkpKS4HK5YDabER8fD47j
      sGDBAty+ffueAUCWZQQCgUmXPygGVaWXZSlsvaIoqsovSVJEyj16eWqIYhAYtX5ZUjc3QzAY
      DCu/qlfTAQgGAhN+ortzn4uqf7sY9tulCfx2Key3T27bqZ0XY3ReKaj2uI3M+RIpkqTuvBFF
      Mfy4m8C+lye17wLgIrT9ZLXLuWPfBdXue0m+5zUrIgHA6XTigw8+wHvvvad89td//ddYsGD8
      Lndutxt79+6FJEl44okn0NfXB6PRqFwg4uPj0dnZCWDkR4/+4bIsQ6NRMQfNfai9gIXWPeqv
      SeZ/8CZTfvmu/BNY92TzTzQv5En+9jvzq1y/PPn89/r/ieSfaqqLIt/x+9Xuu0lve0zquJ2s
      SJ6zof+PSAD4/Oc/P6F8TqcT//Vf/4XKykosW7YMGo0Ger0efr8fsiyD4zi43W4YjcaRwgpC
      2HuGg8FgRN47rFW5DI7jwxqsAxoBauI5z4fnnyyJ56HmXkqjEaAdtX6O51WtTysIYeVXezOv
      1enAT/D3cxwXtm5Z5W8X7vjtIs9DzX2kVtBCE/bb1f14rVYbVn6fylmRRucVtVpVee/cdlNN
      1mjUHbeCJvz38xpV+04QBAijz1uOU3UZ1Wq1Ez5u7yQjAFV9iu7Yd4Kgbt/z/J35R655k7p6
      7t69GyUlJaivr8ft27fDvtuxYwdycnLum1eWZezbtw+rVq1CeXm5ciKZTCYMDw8rF/7r169j
      7dq1kykmISQKbtzuw+HzTczplxRmYOVCde2EJLomFQDi4+Oh0+lgtVrh84XHs/HuNERRRGNj
      I7q7u1FdXQ1gpOfQww8/jOXLl+PnP/85TCYTrFYrsrKyJlNMQkgUdPQ6sO9MA3N6o16gAPC/
      ZInH8JVC5vRCRlZU5sCaVADYsGEDACA3NxdDQ0Po6+uDXq9HZmYm+HGqFTQaDb74xS/e87uK
      igosXLgQfr8fFouFuoASQqadxo4B5k4IHDgUZo/qFi8Doot9XAbnNqgtHpOItAGcOHECP/nJ
      T2CxWOBwOLBixQp87nOfg3aMOsrxLuoGgwEGQ3R+9GwTdJjh7R5/0F2Izqeu/pAQcrev/+dR
      DLnYavJ5nsPb//BHUS6RehEJAL/4xS/w1a9+FaWlpQgGg/jSl76EixcvYtky6rP7IPj7rPA0
      sz9am93GKJaGEBJtyZphfNrye+b0acYlANbd9XlEAkBubi4SEhKUbpllZWVwuVyQJAkcx037
      KhyOA7Qq+vEInLr+y4QQEklxnAfrDOzzGGm0955yPSIBgOd5fOUrX1GmgmhsbER6ejreeecd
      /N3f/d20H8WbpenBf6Z+lzm9JmE1gE3RKxAhhDwAEQkAL774Ilyue79TlmVCOEKmSmAgHr7O
      lPET/i9DQMDkhx4SMj1EJACkp6fjzJkzaGhogMViwaZNm+jCT2YEX28iPK3sT6jxvvDuzX9k
      PgKHpZk5v5HbBoA6N5DpISIB4Kc//Snq6uqwevVqtLS04G//9m/xve99D8nJyZFYPCHT1iLd
      LUiG68zptZy6OVwIiaaIBIArV67g61//Omw2G4CRdwRfvnwZ69evj8TiCSFRIPscELsuM6fn
      TMnQpBZHsUTkQYtIAFi8eDFaW1uVOXt4nocsyxgcHITFYonIhG2EkMiS+m7B89ZO5vRC4RYY
      H/u3KJaIPGgRmw30xz/+sTL6VxRFVFdXg+d5fOtb30Jubm4kVnNfgaCIf3njfeb0iXEG/MUT
      NEYh5CnTcayPv8icPlmzGoA1egUihDwQEQkAL7300n3npH8Qsw9Ksowz19qZ02ckRWNWjZmr
      SNsGUX+DOb2Rm33vRiUzjxzkIflVXMJkdbPexoKIBIDe3l787ne/w8DAgPLZxz72MRQU0Cvc
      CCHR4W7JgvtCCXN6/aOmyFzwZpGIhMTXX38dcXFxsNvt2LBhg/JSF0IIIdNXRAKA0+nE448/
      jszMTFRWVmL58uWoq6uLxKIJIYRESUQCQFpaGux2O9LS0vDb3/4WNTU10+rVc4QQQj5UrruB
      f0/+fmQCwM6dO2Gz2fDRj34UWq0Wq1evRlVVVSQWTQghJMIEToSF90yuTcTlcilzAPn9fgDA
      1q1bAWDcF8LMJpLHAHerjTm9MSeBJgMgAABPWzpkn4cpLac3whLl8pDYMqkAsH//frz55psA
      AIfDAZ1OB71eDwD48pe/jEWLFk2+hDOA6NXB15nKnF47RN1QyQhfVwpkr5cpLUcvSCIRNqkA
      8MQTT+Cxxx4DAPzbv/0bysvLlekfQm+dJ4TMTiv1V/HzFPZp1I2mPwawJGrlIepN6iqt0WiU
      aR40Gg0EQXggA78IIVNPw0nQc/QipZksYm0Abrcbw8PDsNvtAACr1UrBgBAybfk6UxFoZp8K
      3BScfXOaTSoA7N27F2+88QaAkQBQXV2NX/7ylwCAV199FYsXL558CQkZg7c7Bc4rhczpNSst
      0EaxPGTm8PcnwN/N/jIgWZx9HVsmFQCeeeYZPP300/f8brq/B3g62X3yOv5zH/tkbJ/atgQf
      qZofxRLNHJJfC9FlYk4vz8K7OEImalIBYCa88H0mkOWRf2rSEzLTiS4jfN3sbw7UeqgXVKRR
      Vx1CyJQIDMbD3ZzNnN7gYH/SI2yiUql15coVOByOaCyaEEKmBYETISDI+G969oCKyhPA97//
      fbz00kvUCEwImbV+lPQjyMZ+tsScBsALEVu3LPEIqngi4u5TfRaVAPCTn/xEGRFMZr+6wrlw
      J7O/ISyL2o0ImRTJq4PjGnvvN4POhnvNPxCRAHDs2DG0tbWFfWaxWLBmzRokJydHYhVkGju3
      aCH6PW7m9Ft5HqP74hx8aBVzXpPZjOdVlI0Qcn8RCQBnzpyBXq9HYmIiAoEADh8+jOXLl2P/
      /v343ve+B5OJGm/I/d0omMOcNp6eLAmJmIgEgM7OTrzyyitIT08HAFy9ehUvvPACfvjDH8Ju
      t2POnDmRWM198ZCxUNvEnD5JG15dIUs8AmomaHPR284IITNfRAJAWloadu/ejWeffRYdHR2w
      2+3QarWQJOmBjBMQOBF/b/01c3rOkgPgL5S/JZ8OzutzmfMbdBk0LS+ZckFBQE3ZAub0CekZ
      YJ+0nMSCiASAnTt34ic/+Qn+6q/+CnFxcfjLv/xLJCQkYM6cOcpTASEksgKCgA8q2WfXtFni
      sTGK5SEzT0QCwODgID7/+c9Dp9NBq9VCEARwHIedO3dGYvGETFvO+nz4W9jTmwI09pJMHxE5
      Gg8dOoRTp06hsLAQ69atQ2VlJeLi6KUnZPaTAgJkP816S2amiASAT3/603j++edx9epVnDx5
      Eq+//jr+5m/+BitXrozE4kmU+XsT4W9jr6oz0l0sIbNCRM5kjuPg8XjQ19eH/v5+WCwWehfA
      DOLvtcLbzh4AJAoAhMxoQYcZjutzIhMAfvjDH6KmpgZLly7F888/j6KiIhjo/aWEEDItyQEB
      waH4yASAp59+Gp/5zGeUi77H44HX64XRSP3lCZmtJJ8W/r4E5vQaN90Uhkg8j4a8HOb0ptRU
      sL+7jF1EAkBWVhb6+/tx6tQpnDhxAtevX8dXvvIVlJWVRWLxhJBpKOiIg6shjzk9X5IImhNg
      hKjR4MCGKub0qWYzotGiOqkA0NPTg5MnT+LEiRPo6emBIAjIycnBj3/8Y6SksL9qjUzOpZJi
      XOYl5vSPpqWgIIrlIYTMDJMKAL/5zW9w69YtvPjiiygtLcXx48dx69YtpKamRqp8hMFgvAXt
      NvZGXC+1zygOPbQKVwtzmdPvTEkGe2pCprdJBYBly5ahubkZ//7v/67M/a/V0iu3ycwR1GgQ
      UHHMyjSVNZlFJhUAVq1ahZUrV2JwcBAffPABjhw5gtbWVnR3d2Pnzp3IzIxGswUhJBJEnw7u
      ZvZzVJ+QCOrWMbtE5KXwSUlJ2L59O7Zt24b+/n7U1tZCpjeXEzKtyQEBvm72tjp+MD6KpSFT
      IaIjejiOQ3JyMjZs2BDJxc568bwbeZouFeldUSwNITODw2xGfxL7m+isWi2o9SscDemcBqoM
      l7Es6WfM6fUGK4DK6BWIkBngTEUZLmQkMaf/dEoS6BkmHD/VBSCEEDI1KAAQQkiMoiogQqaQ
      PTUZotfLlJbXG8A+eQCJtqDLCNnFOLaZ10S3MBNEAYCQKbT74Y3wiUGmtDqNBkujXB7Czlmf
      D2k4mS0xzyMxusWZkCkPAB6PB9euXUNZWZkyhbTP50N1dTXcbjeWLl2KpKRxGnokDq5b7PdG
      mhQbIvm6mp7kJBx6iH2mjgWF+VgdwfUTQtQ7t6QU3RmMF3AAf6TXR/S6MR1MaQCor6/HoUOH
      0N/fj6KiIuh0OsiyjHfeeQcpKSnIzMzEb3/7W/zJn/zJmDOLyuDg72WPr4Imsn0BnGYTbhTk
      M6dPSmE/6MjYLi6cjw94kTn9YzlZKI1iecjM0ZJlQ6uZvWNoQDvl98sRN6W/yGw241Of+hR+
      97vfKZ85nU4MDg7iqaeegkajwe3bt3Hr1i2UltJpS+7mMegxaGWfktivpRcVTRfDcWa0ZaQx
      p9cbTbPuDnyqTWkAyM7Ovuszr9cLi8UCjWak0SQrKwt9fX0AAEmSIIof3u1JkgSfzwcEAqrW
      K0kyXK4PB1OJHo+q/KIohuX3+Xyq8geDwbD8st+vKr/fH0BgVP5gkK0OOcTn84b/fpF9JlEA
      8Ho9YetXO+rb7XZD4CfWAU2Ww/ddMKDyt/t9d/x2dfm93vBtJ0nqtp3b7QEvfPGXH98AACAA
      SURBVHjayVC37Uav2636uJfCtx1j43OIKAYnd9wHAmH5L+dm49jWTcz5d6SnIG70vguyP/kB
      gNcbvu8llce9x+OBTvpwf6k97kev2y+qK/ud1yz1+y78muX/33037Z5pZFkGP+riwPN82EnG
      jZqMi+M4mM1mSCovoDw/ki/Er/LFNRqNJiy/3ulQlV8QhPD163RQcyrpdFroRuUXBHW7Ua83
      hK3fpeGh5lJiMBjD1s+pnCDNZDJBq5lYr4jQPg8RVD6W63X6sPwajbr8BkP4thvmeag5lU0m
      IzSjtx3UbbvR65ZVXoB5ng/L7zMYMKQiv0YTftxCr4dTRX5Bqw3Lr9WpmzhSp9OF7ztB3TFk
      MITve16j7ibEaDTCbPyw188Ax6kK32HHrcqbtjuvWb0pydi/fg1z/tzcPGwdfdzp9XBgGgaA
      uLg4DAwMwOv1Qq/X4/r16ygvLwcwcgCPDg5q73wJIWQ28Ot0uDWHfWJyIeXeU/RPWQCQJAmn
      Tp1Cb28vmpubsXfvXqSlpWHdunUoKSnBr3/9ayQkJMDj8SAvj/2tQ4QQQthMWQDgOA5LlixB
      MBjE+vXrAYxUrfA8jzVr1mDevHnw+Xyw2WyqqzjUkjkOLqOKaaL0+ugVhhBCHpApDQAWi+W+
      36Wns7/harIGEuLx//3Rk8zpi5JT8WdRLA8hhDwI064NgJCZ5EpxEQYT2ceVPCYImJ6TAqjX
      m2TF2fIy5vTFmRnTcjRsLOq3JuBMeRkFAAJ8ULEYt9PYp9V9Ls4MGso24tq8AnTY2N+BvS3K
      1ZkPUl+iFecWs4/PMdvSsSiK5SHsBhLicW5xKQUAAtiTk9CqojPjbBwRSUgsoumgCSEkRlEA
      IISQGEUBgBBCYhQFAEIIiVEUAAghJEZRACCEkBhF/fmmAX+fFcNXCpnTJ5Qkgma1J4RMFgWA
      aUDyCxBZXy4NQApMr90WFAfgD7BPiX3nHPj+QC9zXr+GfTsRQsY2va4kZEbqGToEu6OLPYP8
      AkYfet0Du5mz+o1JAP6IfV2EREl9YT58TrY3InC8BuyTNz84FAAIIWQCTi1dAhfjy6h4jsO2
      KJdnImZFABB5Hm88vpU5vTXOgp1RLA8hD4Ik+9DV/zZzep2UA2Bd9ApEZpxZEQDAcehLYp9n
      UDZSPTKZ+WTICAT7mdMHxYQolobMRNQNlBBCYtTseAIghJAZRJaD6Bs6ypxeK6cC2BjxclAA
      mAVkiJAktsaokfRSFEszsww6T6Ozr5o5vT84HwD7uxMIuRcZMty+W8zpPT5vVMpBAWAWGHSc
      QXvvfub0Xl82gMzoFWgGEUU3guIwc3pZZn9vwnTn1+lw28b+6tXkRCvYX31DZgIKAITEqP6E
      eLzzCHu1Qmm6DfOjWB61vL7bGHZdZk4fFEsBCmFhKAAQQmYkt68RQ65zzOmD4uNRLM3MRAGA
      EBKTJMkHUfIwp5dlefxEMwwFAEKmkNffBm+QrQFfErRRLk1s6R36Azp665nTi9J6AOaolWcq
      UACIgKA4iCHneeb0Xj8PYFH0ChRDfP4OVdveH8wFkB29AqnUO3QY3iDbXahBMAA0hp1EEAWA
      CAgEhzDsvsCc3uNj73lBxub1d6ja9oEgTYUwXbi9t9AzeIA5vdefBCAvegWaQYKiQ9W2sxkX
      Alhx1+cUADDSLz4osk9nLElxUSwNITOD29uE9p5fM6cfTnscQInyd1Achtffxpw/KLLNvBkL
      JNmvatv5g/e+6aQAACAYHEJn3/9jTp+iWwJgQ/QK9ID5Al1we1uZ00vy6iiWhswcIiSZfYCS
      LAeiWBaihii54fY2UQAgwLDrIvqGLzKnF8WPAEiOXoFmEIfnKgadnczpJXkDAH30CkQIA1/A
      jr7hwxQACJkMl+cmHO4m5vSyHIxiaQhRh2YDJYSQGEUBgBBCYhRVAU0D7bZ0nF9ewZy+wpaO
      +CiWhxASGygATAM9SYmoLSlmTp+TlIgFUSwPISQ2UAAghJAJCAQH4A+wdYPleS7KpZkYCgCE
      EDIBPYP7MOwdYkrLczyAT0a3QBMwKwKADAn9wyeZ02ukZACbolcgQgiZAWZFAIAsweVln9XP
      LGREsTCEEDIzUDdQQgiJURQACCEkRlEAIISQGEUBgBBCYhQFAEIIiVEUAAghJEZRACCEkBg1
      LccB9Pf3Y//+/fB6vaiqqkJRURE4bnoOpSaEkJlq2gUAURTx9ttvY+3atUhNTcWvfvUrpKWl
      wWq1TnXRCCFkVpl2VUBOpxM8z6OgoABWqxWlpaVobGyc6mIRQsisM+0CgNfrhdlsBs+PFC01
      NRWDg4NTXCpCCJl9pl0A0Gg0EEURsiwDAAKBALRa7RSXihBCZp9pFwCMRiMcDgdEUQQA3L59
      G6mpqVNcKkIImX2mXSOwyWRCZmYm9uzZg+TkZHR0dOCRRx6Z6mIRQsisM+2eADiOw9atW1FQ
      UAC9Xo+Pfexj0Ol0U10sQgiZdabdEwAACIKAsrKyqS4GIYTMatPuCYAQQsiDwcmh7jYzgCiK
      SuMwAMiyrPzziz7m5XDgoBP0yt+SLCEg+pnz8xwPrebDailREhGUAirya6DVfNizSZQkiLLE
      nF/D8dDwH8buoBiAKItj5Agn8FpoeI3yd0D0Q1Kxfq1G97/vOB3hD/ogg/0w0mn0YSO7fUG2
      F2uP4KAfte+CYhCiHGTOffdvD0BSse3u/u1+yGDfdnf/dh/AvO3Cf7v6456HTvjwuJVkGUGJ
      /bfzHAdh1LZTe9xrOAGC5sNKh6AUhChN4b4T/ZBVHPeT23eAXjAo/z9drlkzKgDIsgxJ+nCH
      SZIEnueh0WjGyHV/gUAAGo1GGXOglt/vh1arnfA0FT6fD3q9fvyEUcgvyzICgcCE21ckSYIo
      ihPuohvq6isIE6uFDAaDE847G347x3ExedzTvovsvpuWbQD3c+eGkyQJk4lfoaeHyeaf6Ikw
      2dg7HX77VOWfrNE3Eg86fyS23WRIkjThC1Ao/2REovwzNX8kzvnJLOPOslMbACGExKgZ9QRw
      p8ncxYTyT/RRChjprTSZWUon+hgZifwcx00q/2S223TIP5O33WSP+5l83E42/2T33WSqb4Cp
      v2bdWfU1o9oA1PD7/Whvbw9rNM7OzobBYBgj14dEUURzczMCgZFGLo7jUFBQwHzw+P1+tLS0
      KOvXarWYM2cO0wEgyzI8Hg9u376tPO4ZjUbk5uYynbiyLMPhcKCjo0P5LD4+HpmZmUxll2UZ
      fX196O3tVT5LTk5mHpEtyzK6urowNDSkfGaz2ZCQkMCcv62tDS6XS/ksNzcXJpOJKW9vb2/Y
      us1mM2w2G/O6Ozs74Xa7lc+sVitSUlKY8kuShPb2dvj9HzbQpaSkMP/24eFhCIIAg8GAmpoa
      AEBlZSXTSS/LMrxeLzo7O8Me9XNzc5nrzP1+Py5evIjh4WFs2LABN2/eRHFxMXPAGBwcRF9f
      n3Lc6nQ6ZGdnM5e/r68vbO4vk8kEm83GfNwPDQ2hq6tL+cxqtSIjI4Op7LIso6enB/39/cpn
      qampSE5OZs7f2dmJ4eFh5bOsrCxYLJYx84z+7504jmPe9ndes3iex9y5c8e8Zs3oJ4D7kSQJ
      u3btQlZWVtgFX81FYPfu3UhPT8fNmzexePFiXLx4EXPnzmVe/5tvvon8/Hw0NDRg4cKFqK+v
      x5w5c5jye71e/O53v0NWVhYGBgaQmpoKh8OB3Nxcpvy9vb04dOgQzGYzTCYT/H4/rFYrcwBo
      bm5GTU0NvF4viouL0dzcjLKyMuYAcOnSJbS1taGvrw9lZWWoq6vDunXrmC6Csizj2LFjCAaD
      aGtrw+LFi3Hp0iVkZGQwBYDm5mZ88MEHmDdvHlNZ73T+/Hm0t7cjKytL+UxNg+XRo0cRDAaR
      mJiofBYXF8ccAE6dOoU1a9bg1q1bcLvdMBqNuHHjBubPnz9uXlEU8dZbb911o5Kdnc207mAw
      iHfeeQdLlixBZ2cnNBoNbt26xRx83W433nzzTZSXlysXLaPRyFxn3d7ejmPHjoX9VjX3p52d
      nThx4gQEQVAmkczMzGQOADdv3sSVK1fgcDhQWlqKhoYGVFZWMgeA6upq9PX1obu7G4sXL8aV
      K1dgtVrHDACiKGLv3r3weDz3/P6RRx5hmgpflmXs2rULGRkZaGhoQFlZGWpra5Gfnz9mvlkb
      APR6PVatWjWhxyW/3w+j0YiVK1fC6XSivLwcTqcTQ0NDTHeCbrcb6enpWL58OVwuFyorK9Hf
      3w+Px4O4uLhx8/f396O4uBj5+flobm5GRUUFDhw4AFEUmZ5A2tvbsXLlSng8HphMJmRlZeHA
      gQNMvx0AGhoasG3bNpw7dw4lJSVYtGgR3nvvPaaLEAC0tbXhkUcewbFjx1BaWgqbzYaWlham
      C1Ho6WX79u147733sGjRIuh0OtjtdqYTwel0oqKiAsXFxUxlvdPQ0BCqqqqQlJQ0ofzDw8PY
      sWPHhKsZAoEAzGYzmpubUV5eDp/Ph7a2Nqa8siwjPj4ey5cvn9Bx73A4kJSUhMLCQtTX1wMY
      CV4Oh4MpAHg8HhQWFmLp0qWq1w2M7LvFixejtLR0QvlbW1uxdu1adHV1wWazISkpCQcPHmTO
      f/PmTezYsQMnT57EwoULUVRUhOrqahQWFjLlt9vt2Lp1K44cOYLS0lIkJSWhs7NzzAAkCAIe
      f/xx5jLej8/ng8lkUq5ZFRUVcDqdGB4eHjOAzcpGYI1Gg/j4eHR0dMDj8Sj/WFvvBUGA2+2G
      RqOBz+eDz+eDJEn3jdJ30uv1cDgcEAQBLpcLgUBA+cfCaDRieHgYJpMJfX19EEVRVfnNZjMG
      BweRmJiI9vZ2SJIUVqUxHovFgr6+PmRkZKCxsVFZPyuDwQCHwwGr1YqOjg5V6w898vp8Pmi1
      WgwMDECWZeb8ubm5aGxsDNvvo6tjxjN//nzU1taG5WfZb36/X7kAXrp0KSx/MMje191ms+Hd
      d99VLsatra1IT09nyqvVamGxWHDt2jU0NTUp/1iPO4vFgoGBAbS3tyMQCKC7uxstLS1hTzNj
      SUpKQn9/P5xOp/LbfT4f8118dnY2Wlpa4Ha7J5Q/Li4OAwMDSE5ORmtr64SO+/7+fqSlpaG5
      uVl1fq1WC5fLhbi4OHR3dzPn7+zsVLZ3c3Nz2D/WY1er1d51zRJFEV7v2GNsNF//+te/zrSG
      GaazsxPXr19HS0sLGhsb0djYiIyMDKY2AJ7nYTAYYLVaER8fj4MHD0Kr1WLx4sVMd1YajQZ6
      vR5WqxWCIODIkSNITU1FYWEhU32eTqdTHmNdLhdOnjyJoqIiZGZmMuU3m83gOA42mw1tbW04
      e/YsKioqmB9lrVYrJElCdnY2amtrcenSJVRVVY35KHtnfo7jkJmZiTNnzqC1tRUrV66E0Wgc
      Ny/HcYiLi4PBYEBaWhqOHTuGoaEhLFu2jKnvts/nw5UrV3D79m00NTWhsbERTqczrEpnLE6n
      E1evXkVbW5ty3IiiiLS0tDHz1dTU4PLly+jv74fdbsft27eV/AaDgfkiarPZkJaWhoULF0IQ
      BKX9geW4CwaDOHv2LHQ6HbxeL1wuF1wuF1JTU5m2Hc/zyMnJwZUrVzA0NITh4WE89NBDiI+P
      Zyq7LMu4evUqWltblW1vt9uRk5PDVH6/34+rV6+G7buhoSFkZ2czHfeh4zMzMxO3bt1CTU0N
      li1bxrztExMTleP+woULqKurw5o1a2A2m5nyJyQkQBAEZGRk4PTp0+jo6MCKFSvGvea0tLTA
      arWiq6sLPT09cDqdyr/U1FSm9pvR1yyLxYKDBw9Cr9ejrKxszG0/axuBCZlqoVNLTY+bpqYm
      2O32sM+Ki4uZqr/8fj8OHDiARx99dEJVQLIso7W1NeyC3dXVheTkZHonR5TJsgy/3w+dTqcc
      Lz6fDxqNZtK9psYyK9sAgJGG0BMnTsDlckGr1SIQCGD79u3j1u0ePHgQmzdvxpEjR8J6kmg0
      Gjz88MPjRvNQ/j179oQ9+pvNZmzYsGHME6m9vR1nz56953fJycmoqqpiOrH7+/uxd+/esDuH
      3NxcrFy5csx8bW1tGB4ehtlsxvnz58O+mz9/PhYsWDBm/uvXr8NsNsPhcCh1yCGVlZXjNmKH
      6lsbGhruqvdeu3Yt0xOMKIo4d+4cbt26BY7jIMsysrKysG7dujHzDQwMYGhoCPHx8bh161bY
      d+np6cwN8G1tbZBlGTabDe+88w78fj82bdrE3IAeFxcXVtVXU1PD3HlAq9UqDbej71rT0tKY
      LiKyLGPPnj2YM2cONm3aBIPBgCtXrmDFihXjBoALFy5gyZIlOHfuXNjnRqMRCxYsYOr9JkkS
      ampq0NDQoATPjIwMbNiwYcwg2tPTg7a2NthsNpw+fTrsu/z8fCxZsmTcdQMjHQiOHz8edo4v
      WrSIue2rtrYWtbW1Yefd6tWrmRvh33rrLWRnZ2P16tXQaDSoq6tDWlrauJ03Qtecw4cPh/VA
      EgQBW7ZsGfOaNSsDgCzLeP/997F+/XqcPXsWmzdvxtGjR5kepVasWAEAWLNmzV11jyy9QUL5
      t2zZEvY5S//jjIwMbNu27Z7f8TzPfCd548YNrFmzZtweAHdKS0tDSkoKtFrtXfXOLBeQOXPm
      gOd52Gy2u3pMsdxBlpSUQK/XY8mSJXfNBsvajbGjowNutxvLli2DJElITExEQ0PDuPm0Wi2M
      RiN0Ot1dNwksDaAhly9fxtq1a9HW1oaMjAyUlpbizJkzdx0P95OamhoWLHieR3t7O3M7QE5O
      Tlg3SABKVSRr/iVLlmDPnj2oqqpiygNA6eV057YbfUc7HrvdjsHBQaxatQpOpxM2mw3Xrl0b
      N5/VaoXZbIZer7/r/FHT7/78+fN47rnnJjzNxI0bN/Dcc89N+I49Pj4eFosFe/bswaZNmxAM
      Bpna/ULXnKqqKtXXrFkZACRJAsdxiI+PV+4Cc3Nz0dzcPG4Pg1B9Z6gxJSS0nPEO5vj4ePj9
      fly4cAGrVq1SVW6NRqMcsMFgEE1NTRgeHkZWVhbS0tKYT6S0tLQJvUc5dOCHhpuPPvhYnjy0
      Wq1yAN55ErC2XciyjDNnzqC8vHxC88W4XC6kp6dDr9djeHgYqampOHXq1Lj54uLilB5aJpMp
      7OlNzUVEEAR4PB7U1dVh2bJlqsvv8/nC1j04OKiqEbmkpOSui4Ca8nMch6ysLGzbtg1HjhxR
      6rHHEwr4+fn5YWNv1PRjd7lcSEtLg16vx8DAgNKoPN55p9VqodVq0dvbi97eXuTn56sKPCE2
      mw29vb3M3aXvlJSUBIfDwdzmcC8LFy5Ueu1ptVqmLqzx8fEIBoM4d+4c1qxZo2p9szIAhBpE
      PB4P4uPjUVNTg66uLuZHQVEU8fbbb0Ov1ysXPo1Ggw0bNjA1Imu1WjQ3N2PBggVMdbd3CgQC
      eOedd2Cz2ZCYmIjz588jISEBq1evZjqoExIS8O6776K7u1v5zGazYfHixUzrv3btGi5duhTW
      +FdUVDRu18r3338fPT099/yusrISeXl5TOv3+XzK+Am1UlJSUFdXh7y8PNTU1ECW5bAL0nhc
      Lhf+8Ic/oL+/HxaLBcPDw6ioqEBFRQVT/mXLluG9995DcnIykpOTcf369XGrzkarr69Ha2ur
      8rfZbFZ1I/H++++HtSH09fXh+eefZ2rA5zhOqSY0m83Yvn076urqmANx6LwZ/bQaHx+PdevW
      Md0Vh3o9zZs3D2fOnIEgCPD5fMwXcovFgpaWFuzduxdmsxnz589nHoQGjDx97dq1K+zpNdQd
      m4XZbMauXbvCxhuVl5czP73NnTsXPM8jNTUVjz32GA4cOMC87TUaDbq6utDd3c28PmAWNwL7
      /X4IggBJknDjxg0YjUbk5eUxHQwulwvHjh3D9u3bJ7RuWZZRU1ODixcvYvXq1eB5XtVI4MbG
      RnR3d2PlypXgOA6SJOHtt9/Gjh07mA6IYDAYNooWGAlKrFUZe/bswcaNG1VVfQAfzpR4LzzP
      M48GbWtrw8GDB7Fw4UKlakHNSOBQY1pfXx/a2tpQWFjINP4CAM6ePYvU1FR0dXWhuLgYwWAQ
      DQ0NWL16NVN+YGT7e71eGAwGZeZJ1otQU1MTsrOzJ9ToOnp69JBDhw5h9erV4wYAl8sFk8l0
      V3djjuNgMpmYLsJ2ux21tbXYtGnTXd+xjuQN7buBgQG0trZi7ty5sFgsqu7mJUnCwMAAzp07
      B7fbjSeffJIpn8/nu6vbpMFgYL4Ie73esFoDYORpknVfhkZyj97+BoOBefaA69ev48SJE1ix
      YoVy8xqTI4FDG6OkpASCIKCkpATt7e3o6+tjaowzGo0IBoMQRXHCc3cYDAYsW7aMuQ/2aHq9
      Hk6nU/lbFEUEg8FxLyKiKMLv90Ov19/1pKKmV8i8efPQ2NioekBOaFtJkqQ0KIdkZWUxPxpL
      koTKykoAUE6o8e5TRFGEz+dTfrff74fFYlHuvln3ZSAQgNFohNlshsvlQk5ODk6ePMlUbmCk
      yubQoUPw+/0oKyuDJEkwmUwoKipiyn/jxg0AUN1+A9y7uiUrKwttbW3jPoUcP34cW7duxenT
      p8P6rut0Oqxfv57pImi1WpXxIhOZa8jhcKCnpwcFBQVISkpCYmIiamtrsWjRIuZlOJ1O1NXV
      oaOjA0ajkenpKdTXPjQFx2hqzn+dTofe3t6wczcrK4spAMiyjIsXL6KhoUHpOtva2opPfOIT
      zKPIeZ5Xqut8Ph94nh/3vJmVAQAAbt++rbTey7KM/v5+5fFqPBzHwev14re//a1SL67RaLB9
      +3bmvuwLFizA4OAg3G43srKy4HA4mA8mm82Gmzdv4q233kJcXBz6+/uxdOnScR+jh4aG0NDQ
      gLlz5+L48eNh3+Xk5DDXSQuCgIMHD4Y1wJWUlDAHhNraWnR3d8Nut2Px4sW4du0aEhMTmQOA
      TqdDaWmpsr2GhobGPZDdbjdqa2uxcOFCHD58+K7vPR4PysvLUVJSMuZy8vPz0dvbi4KCAuzd
      uxdXr15lHj8BjEzl8Mgjj6C/vx/Dw8PIz8/HmTNnmAPA8uXLceDAASUIASM3JKy9eC5cuBA2
      l01bWxvTSNNQ4+m97t5ZCYKA9vZ27Nu3TylvXFwcli9fzlR+j8eD7u5uFBQUABj5PTdu3EBZ
      WRlTQGlra0N1dTUWLlyIsrIy6PV6pnyhuZsEQcClS5fCvistLWWeVuT8+fPo6+tDV1cXysrK
      cPXqVSQmJjJVv4Vump544gkcPnwYW7ZswenTp+96orgfjuMwb968sCc4lonrZl0VkMPhwLFj
      x3D9+nXk5+crG8Dv9+PRRx9lHtQxGbIs48CBA+B5Hr29vXjuueewa9cuPP7446p6CDidTrjd
      blit1gn3TJgKe/bswdatW3H06FGsXbsW/f39aGpqYrobk2UZ+/btw8aNG5W7sYaGBjidTuY2
      nHvxer04ffo0NmzYMGY6v98PnueVUdyhwTisT1DvvvsuqqqqMDg4iOHhYSQmJqK+vp75wnr5
      8mVlFGroznHp0qXjDkQDPpxGY/RTp8lkgsFgGPNC6Pf70draes8gy/M88vLymAPQ6K7Tofws
      VTi1tbW4fPkyBgYGlG6ToigiKysLK1asYK5CAib29BHKP5lZUkPH/ZEjR7B+/Xq0t7djYGAA
      5eXl4+aVJAl79uxRpkDZsGEDmpqalCdJlrKfOnUKdrsd3d3dyMrKQnd3N1588cUxn95m3ROA
      2WzG5s2bodfrsXLlSuUkCvWRZjU8PIza2loEAgHl5F+1ahXThbi/vx96vR7r16/H3r17wfM8
      4uPj4XK5mB7nfD4fTp48qaxXFEXwPI+UlBSlWmssra2t8Pl8yl2nLMs4evTouBe/EEmScPHi
      Rdy6dQulpaXKFAOsjUtGoxFDQ0OwWq1oa2uDVqsdd0g6MHKRDo3CrampUXoVNTc3Y+3atWPm
      DQQCGB4eRkJCwl09oHQ6HSwWCx566KFxy3D16lVotVqUlpbCbDarvmF46KGHsH//fmU6C0EQ
      VLUllZWVMZ3wd3K5XDAajXe9qSsYDI57YRNFEQ6H455dDgVBYJ6KIdTVua6uDrIsY8mSJWht
      bWW6A16wYAGSk5Nx+/ZtJdBzHMfUmyc08jorK+uuHl/5+fnMDfg3btzAjRs3sGDBAuTk5Kju
      STR6Kgi73a5qChOO45Cbmwu/34+CggLs3r0bHo8HH/nIR5jyBwIBDAwM4LHHHsPhw4fx8MMP
      4+DBg+N2gJh1ASDUA+ihhx6CIAjQaDRoaGiA0WhEVlYW0w6VJAkHDhxARUWF0p1z9AV5PAaD
      AYODg8oJJYoi7HY78118aP6g0J1DZ2cn+vv74fP5cPbs2XEbJO9szPL7/fftnXMvFy9ehCRJ
      qKqqQmtrKxYvXoz33nsPjz76KFP+iooKcByHhQsX4ujRo/D5fOMOxAJGqtmSkpJgMpmU0acc
      x6G4uHjcwBm6iy0sLMTFixfDvktJScGSJUuY7mKLi4uxb98+5OTkMNe9jhYfH4+nn35aqbay
      Wq2qbjx6e3tx/PhxOBwOZSK2rVu3jtsd8Ny5c1i+fDkuXboUNo03AKxfv37MRnCj0Rh2lyrL
      MoLBoOqG6EAggD179qCyshLXrl3D0qVLcfXqVeTl5Y27LK1WC5vNBqvVetd7v8eryklOTkZC
      QgK0Wu1d1V1q274yMzNx/fp1XLt2DSaTCeXl5cxVgKFtWFpaqswKy3rTBYx0dDAYDCgsLER2
      djY0Go2qfRB6VWUgEADHcUhMTERPT8+Yve9mXQAARjbEkSNHlAE5zc3N8Pl80Ol0TI/Sfr8f
      cXFxyM/Px82bN5GVlYW8vDzY7XamPsImkwkLFizAm2++id7eXvz3f/83li5dyvwuAq/XG3bH
      bbFYcOzYMaxevRpHjhwZ847u/fffR21tLURRxNWrVwGMnATjjQIerbOz/UT6cwAAIABJREFU
      Exs3blQas0J921n19fUp717YunUrALbH8lBPqbS0NBiNRnAcB5fLxXQSm81m5QTcvHkzc1nv
      NDg4CJ/Ph1/96lfKvi4sLBz3rvzKlSvo7e1VxqCEfq8oiiguLmYeDVpdXY3169fjgw8+wMaN
      G5WurOMJBVg1+/lOsiyjrq4OtbW1GB4exp/+6Z/i3XffxY4dO5j2QW9vL3Jzc1FYWIibN28q
      d/Chif3G43a7w9pvnE4nDAbDuL14QtvnXh0u1NzBcxwHi8WC8vJy2Gw2nDt3DpcvX8b69euZ
      8uv1egiCAJPJhB07dqhavyzLOHz4MB555BFYLBbma0WIVqtVAlVmZiZ27doFl8s1bgP6rAwA
      kiQhGAzCaDSioaEBDz30kFI3xhIAdDodnE4nOI6D3+9XBpiwDsnnOA7z589HcXExAoGA6hdo
      Jycn4/DhwyguLkZSUhKuXLkCi8Wi1E+PtazVq1dj7ty58Pv9zNMX3GnRokXYt28f5s6di/7+
      fvz+978ft/F0NLvdDrfbjUWLFk2oTvXKlSuYP38+/H4/3nvvPWVIO8sduSRJqK6uVvrSh6aC
      YB0gk5GRgWeeeSbsM5aLX2ZmJpKTk3HmzBmUlJQo1R5NTU3o7+9nDgCBQAAWi0Wpt83Pz0dL
      SwvTuyxkWca1a9fQ19cX9rnJZEJJScm43Wg9Hg8aGhrw7LPPYv/+/cqsuoODg0zTYycnJ+Po
      0aPKsWK329Hf3898MYuLiwu7g/f5fDh06NC4+err65XeU3dSMxWEw+FATU0Nent7kZaWhtWr
      VzNP4QGM/N66ujpIkoTMzEzMnz+fuQtrqAfPiRMnsGXLFtVPXxzHKcd4eXk55s2bB71eP+5y
      ZmUA4Hkeer0ep06dgt/vh9lsRmdnp9K7gCV/6C5yw4YNOHXqFLKyspjrwEMNOiGhkZzx8fFY
      uXLluH3SdTodtm/fjhMnTsDn8yEvL0+Z55tlMFdqaira29tRV1enfBYfH888I2Z2djZMJhPq
      6+thNpuxaNEiVaMjS0tLsX//fuj1euX9CXFxcUxdCWVZRnd3NyorK3H+/HmsX78ebrcbzc3N
      TL89NBVEaWkpJEmC1WpFU1MTc9klSUJjY2NY3W1aWtq4F/DQBVKr1SInJ0fpLRZ6emPtypiS
      koKhoSHYbDacPHkSHo+HuReKLMu4desWysvLodFo4Pf7UV1djcWLF2PPnj145plnxgxmoZfF
      h9LIsnzXeJKx6HQ6bNmyBadOnUJfXx8uXLiguuPDaKE69fHaMEpKSu7bzVXNDcjQ0BAKCgpQ
      VVU1oTIXFRWhsLBQGcj4y1/+Eps2bWKaS0iWZbS0tKCjowO/+c1vlOPn4YcfZn4hzOnTp5Un
      dUmSIMsyLBYLSktL79sOMysDAMdxSvVPeXk5eJ5Hfn6+qhFyVqtVeS1ieXm5qqkYQnfqGzdu
      BDDyaHvmzBmUlpbi0KFDeOKJJ8Ytf1JS0l0NQKyjim/evIn6+vqwEY2s7xIYbXRfdKfTyTwd
      dE9PDxITE9HU1ITbt28DGDlJWYIIx3HgeR52ux09PT1Ys2YN7HY782Acp9OpvD3M4XAgMzPz
      vhPs3cv58+fhdDqRk5OjfKZmSoqioiIcPXoUW7ZsAc/zuHz5sqqXy4R6vCQlJcFsNoPneebA
      Hao7z8rKUi7iobdC1dfXQ5KkMQOA2WxGUlISdu/ejY6ODuzZsweCIKia2iAlJQWPPvqo0gal
      pirD4XCEvbhIFEVkZGSMe96NrnJrbW3F2bNnIYoiCgoKlGDIIisrC42Njdi9ezdkWcaiRYtU
      vVmuv78fV69excDAAMxmMzZu3Kiq1qCqqkrV/EujhdoZQ+2DofbCoqIiHDx4EE899dQ98826
      AOByuWAwGCDLMtLT0yHLMpxOp6oGvVB9XKgPf0NDg3J3w9odTZZl5ZHbaDTC4/EoDXnj3dG4
      3W689dZbYVVHKSkpWL9+PVN1ROhJgfXgu1N1dTXa29vDLlx5eXnMASAjIyNs1HMwGGQeEMdx
      HFavXo3q6mqlF5csy8y/JTk5GfX19cjNzcWFCxcgCIKquXQ8Hg8WLVrE/A7gOxUVFSmvZpRl
      GXl5eVi+fPm4+YaGhu4K0qGpOEK9wMYjCAIEQUBDQwPy8vIwPDwMp9MJnueVhsGxhKaC8Hg8
      GBgYgMViYa7CuHjxIi5fvgyj0Yhly5Ypr2YsKChgHn8SFxd3V32/mkkQW1tbceHCBWzfvh2C
      IKC2thanTp0atwdZSH19PRobG5UxEadOnYLP52PulXXp0iX09fVhyZIlyMzMVNqxxhMMBlFb
      Wwuv14uKigpcv34dt2/fRnFxMYqKipiWETpGQlXcsizj7NmzyM/Px6VLl+57zZl1AeDy5ctY
      uHAhbvz/7d37V5NX9j/wd0ggJGAuJEEuIXIHFbkoF60oaAu2pdVOna41znTNzOr/MP/PrPll
      pp1O7cVSlUJVpFLECA33ewIBArmQkITc8/0h3+f5kFbJE2yITfZrLdeSsIADSZ79nHP22Xtu
      7ldVEdvb2zkFArfbjd3dXdy4cQM8Hg9NTU3o7e1l0wxjyc7Ohs/nw/j4OE6cOIHp6WlIpVKE
      QiFOb8SNjQ3U1NQcqpgYENm01Gq1hw4AFosF165di7sUBGN4eBgtLS3sBczhcGBiYoLzGzEv
      Lw/Xrl1jP+ZawwiIBIBz584hOzsbb7zxBgwGQ9T3ehnm5HdVVRV+/vnnqD2DeGqyM4cA46n/
      A0T2PfafIN3v7NmznA8wXr16FUNDQ9DpdMjOzmZnoTU1NQcGkUAggLGxMWRnZ+P06dP4+eef
      sbW1hYsXL3LKgpmdncWtW7dgMpnwzTff4JNPPgGfz8cXX3zBual9KBRiN9MZeXl5aGxs5HQR
      nJ+fx4ULF9jX7blz5/Dpp5/G/DqGTqfDBx98wK6bX758Gd9++y3nANDZ2Qm73Y61tTUMDw/D
      4/Hg3LlzMVcexsfH4fV6kZeXh4GBAWRnZ6O9vZ3NRuNy+DQrK4stW1JeXo7V1VV2Geigm6+U
      CwDMUWimlMBhMB25GExK1d7eHqcAwOPxcP36dYyNjeHJkydQq9Voa2tDIBDglFGgVCqxvLx8
      6IMpTHu5zz77jH2MSz8ARmNjI548eRJVjG1/tcyXCYVCMJlMsNlsWF9fZw8FLS8vc86nZ9Yy
      9Xo9+9jGxgb+/Oc/c6qMmJGRAZ/PB51OB4/Hw9aSiWV6eprtA8AcRmNUVFRwvghYrVbcu3cP
      FosFSqUSZrMZXV1dMQvp/XKT+rCHmvZf9Pd/fazCegMDA8jPz8fu7i56e3tx/PhxXLp0CXfu
      3MHHH3/MafYgEAhw/Phx5OTkICsri03h9Pv9nJbRVlZWsL6+HnXjE89mKNPNrL29HXw+H0tL
      S3EVY2S+ntmvmZ+fj2sTmKmg6/f74Xa74XQ6OS29MoH22LFj+Pnnn9HQ0AC5XA61Wg273c65
      +sD777+PwcFBPH36FCqVCj09PQgEAmhubn7p85dyAYD5Rc1mMyYmJqJyivfflb6Iy+VCX18f
      mzf/6aefsncudrs9rqCSmZn5qzv4rKwsTi+ozMxMaLVamM1m9ufHswSkUqlw69YtzmP9pfX1
      dVit1qhN5NLSUk4BYG1tDTabDWtra+z6r0ql4lwKgVkCYtYymaks14qeOzs7+Oabb3D+/Hlk
      ZWXh+fPnsFgsMWcRhz2A9UvPnj3D22+/jdHRUXR0dMBgMMSVQru3t4eBgQGYzWa8++67WF5e
      xqlTpw782zOdwF522O7tt9+OGQRtNhu6uroQDAbxz3/+Ex0dHcjNzYVMJoPH44l5EfL7/ewB
      PB6Px/4/3lpYhYWFr7T85nK58MUXXyAUCiE/P59zCicQuT48fvwY//nPfwBE9gTiWZPXarUw
      mUwoLS3F5cuXOS+fMTd6zI0m877JzMyMa/kyMzMzKvgzDqorlXIBAIish/X19eHSpUtRm1Cx
      ljTEYjHnk3cvYjab8cMPP7ww6ufk5KC7u5vTYTCRSIR//OMfhx5HIBDA48eP2aYktbW1bGYN
      FyaTCT09PXEvAQkEArS0tODEiROQy+XIzMxk/xaHaVEIRC4mSqUSGxsbnDZDV1ZW0NbWxvZf
      VqvV+PLLLzkvI3m9XgwMDMBkMrElxRsaGjifJg0EAhAKhRCLxXC5XCgqKsLDhw85B5eBgQG0
      tLSwjdnlcjmWlpYOzCLKzMw88LQxl789cwHi8/lQKpXsDJjrRaigoIAtmieTydj/K5XKmJuw
      LpcLOzs7yMjIwMzMDJRKJXvhFAqFUCgUnGdCjY2NaGxshMfjQWZmZlzZPHw+/1fLlPHMwJjX
      CI/Hg8PhgN1uh1Qq5TR7un//PgQCATY3N2Gz2SAUCrG9vR1zGdflcuHRo0cvDLQCgSCqpMqL
      pGQAACIX3MLCwrhOYYZCIVit1hdewHk8HhQKxYHfT6FQ/CqH/DCYFwxTHndmZgZmszlmazzG
      9PQ0ZDIZzp49i7GxMRQVFWF0dJRzADh9+jS0Wm1U/nRWVhbnk8x7e3sIBoNQKBT45ptvEAwG
      0dXVxSmbJBwOY3h4OKomvsvlinkKmdl4V6lUWF1djSqLHM9rYHJyEqWlpZBIJKitrYXL5fpV
      j96DVFRUYGtrCzU1Nbh37x74fD7n2Q8QCUBKpRJGoxFA5OIdqyDY/qJf4XAYNpuN3UeyWq2c
      Zp07OzvskuHy8jL29vbYGvNczlC8ShG53d1dNlW3sLAQKysr7OdkMlnMPYhwOIyHDx/CaDSi
      rKwMUqkUU1NT8Hq96Onp4ZzFNDs7i5GREXbZicl8KyoqQnt7e8z3nlarRUlJCYRCIe7evYvs
      7Gy0trbGzH67evXqS2dKsWZeIpEInZ2dLz0smJYdwZgCVBMTE1HTSZVKdeBFjLnYvuiOhzlN
      e9DF5EUvEI/HA4PBAKPRiPb29phrmkzW0tLSEpaXlzE3N4c333yTcz9gIHIRkclk7Hj8fj9b
      8paLjIwM2O12PHz4kH2sqqqKc0rcxMQErl69iuXlZZSWluLEiRNsq8RYeDweLly4EHc3tcXF
      RTx//hxAJAAx6afhcJjT3gHD7XZDrVbD6/XC6/VCo9FgdHQUzc3NnL5+/9/oxo0bCAQCnLOn
      gMjfmUmFdLlcWF5eZk+VxsK0QnU4HLBaraioqMCzZ8/Q3t4ecwyffPLJSy8iiWxKDkRmDwUF
      BVE/3+PxgM/nc7rpsNlscLvd+Mtf/oLHjx9jcXERN2/ehMlkglar5Ryc9Ho9PvzwQ3a/amho
      CFVVVVhYWMDKykrMEt3r6+toaGjAs2fP0NbWhpycHMzPz8cMAEKh8FDd74DIe1UkErGB/5fd
      2GIVAkzJAABEGnmbzWbs7u6yj0ml0gNfUCKR6IUFw5iuUlwbmgSDQej1euh0Ouj1ejQ1NaGh
      oSHmG8nn8+H27dvIzs5GeXk5rly5wuYjx7MZdurUKfT29uLYsWMwmUzsC5MrPp+Pzs7OQ1dO
      ZQ4hLS4u4vz58wc2inkZph6NXq9ns3IOyqaorKxEZWUlPB4PgsHgoceuVquxvr6OsrIy9PX1
      sZuasVgslpeuwfN4PM4Naerq6qBSqWAwGJCZmYkPPviA89f6fD7YbDb09PSgv78fQOTiurW1
      FTMAJPoif5BwOIzR0VHMzc1BqVSipqYGw8PDCIVCuHjxYsxOci6Xi73Lr6ysxMjICDIyMpCX
      l/fSzKoXYQr4Mc93Xl4etre3UVxcDIvFEjMAiEQiGAwG6PV6NDQ0sD0Jjsrs7Cx7cC8UCmFx
      cRGffPJJelUDBSJP5It6o8YjHA7D6/XCYDBgbm4OLpcL169fj/mE3r17F7u7uygpKcHVq1fx
      +PFjnD17lvObGIi8kJgyvochFotx8+ZNbG5uwuPx4Pjx43Gt55vNZuj1+rjvwhnNzc24d+8e
      CgoKkJeXh/Hx8ZhZMAyv14uVlRX2rqu4uBhvvfVWXIfQJicnce3atUNlUO1fc33rrbdgtVo5
      pdNubm5G1eHfr6KiIubzz/SscLlcKC4uhkAgwPLyMrxeL+ffnTnzwDTiCQaDWFpaimsjNBk8
      Hg/W1tZw69Yt6HQ6DA8P4+bNm9jb28ODBw+g0WgOfC5DoRC8Xi92d3fZpT+mLHY8ByDPnTuH
      3t5eNDc3IxQKYXR0FB9++CEmJiY4leK4ePEinj59igsXLrBNpbicAv4tMDPn/fr6+uD1etMv
      AITDYSwtLWF4eBh2ux0KhQIWiwV/+tOfYp7K9Pv9MBgMmJychMfjYbMjSktLOc0AdnZ2kJub
      i4KCgrgv4FlZWfjoo4+ws7PDLmkwdxRMTXYuFzWn04n5+Xn2Y5vNBj6fj8LCQqhUqpjf4+TJ
      k/j+++8xNzfH3n3Fkwu/fy8kFAqhrq6O09/uyZMnbBvACxcuQKPRsKW0uSosLMTExASWl5fZ
      sTOni2Ox2+3szwcieeFcK0Eepn/xfpubmxgcHIRKpcLa2ho2Nzdx+vRp3Lt3D9evX+cUBPh8
      Pi5duoQHDx7AaDRie3ubrSf1OvP7/cjOzkZGRgaqq6uh0+nYQ5Bcsr+YpklMAobP52OLJsZT
      wkQul6Onpwdzc3PIysrCjRs3kJubi5MnT3L6+5vNZrzxxhvsbL2oqIhttZloL2oHKhKJYLPZ
      Dnz/pGwAmJycxB//+Ef2WP7Q0BCnGcG//vUvaDQadHR0QCqVor+/HxKJhPP6+61bt+B0OjEx
      MQGtVov19XUUFxejtraW0zofM3XNy8tDc3Mzdnd3MTExAYPBgM7OTk4BYHt7G2azmS1nMD8/
      D6lUiuXlZdTX10eViHiRjY0NeDwejI+Ps13BampqOB9ump6exuzsLPuxw+HA5cuXY06hs7Oz
      kZWV9cLeqlw5nU7s7e3h/v377KnIgoICTiW0v/76a5w5cwb37t2DWCxGdXU1+3twLYa3sLCA
      yclJdq/I4/EgJycHGo0Gp06deunzt7S0hAsXLqCkpARfffUVampqUFNTA6fTCZPJxHkWoFAo
      cOPGDfZicNjsq6PEJDswMxcmiyYYDHIKAAqF4qWlDuLl9XoRCoVQXFwMl8uFrKwszlUEZmZm
      kJeXF7WJvLi4GNdZglcxMDAQ1YY1HA6z56JeJiUDAPB/mRHMXURhYSHW1tZi3tF1dnZienoa
      33//Paqrqzk1Mvml3NxcnD9/HqFQCHa7HYuLixgYGMCbb74ZV2cvHo8HiUSCN954I67lrJ2d
      HZSXl7PF7+RyOebn59HR0YGxsbGYAUCj0bCVRJk9Da55+EBkI3R/4b3JyUlOm9BNTU2oq6vD
      1tYWZmZmMDs7i/z8fOTn50OhUHC6mEmlUvzhD39gL4Bcl4G2trZQXl6OxsZGCIVCzM/Po6ys
      DCqVCo8fP+YcAPR6Pc6fP8/e9Q0NDaGurg4TExNQKBQv3ZD2+/3sa0MikbAHmEQiEafX4O7u
      Lu7fv49AIICuri78+OOPsNvtKCkpwaVLl16p01WiMb83k3SQlZWFhw8fIhwOH/pMwGEsLS1h
      enoaBQUFMBqNyM/Ph1arjZkF5fP5MDo6isXFRfbwWzgc5pxB9Vth9gwZzPXvICkZAJiUTY/H
      g6KiIty9excOh4NTnfiKigpUVFTA5/Nhbm4ODocDDx48YMvKxpNSmJGRAblczjmD5CDxvIGL
      iorw448/QqPRQCAQYGlpCbm5uWzfUy5CoRA2NjYwNTUFq9WKuro6zsscTE0aRllZGbRaLad9
      gMzMTBQXF6O4uBgdHR1YX1/Hs2fP0NzczPliMDExwZ7irK2txdbWVsyx+3w+doamUChgNBrB
      4/EgFArjyqDy+XwQi8XsHbtarYbT6URlZSW2t7dfGgACgQC0Wi0kEgn0ej329vbYk7FcZl4j
      IyO4cOECJBIJvvrqK9TX16Ourg6ff/45vF7vofeTjoJIJHql8ze/FZ1Oh+vXr2NzcxMmkwlK
      pRJarTbm1/H5fFRWVmJrawvV1dXsPuH58+ePZBPY6/VieHgYAoEAra2tGB4ehtVqRWNjY8wN
      9JQNAOfPn2e7UhUXF4PP58eVjsc0Jj99+jTcbjfW1tYQCATiCgDJkp+fj9raWnz66afIzMzE
      8ePH0dzcjPX19QMvwsFgEGazGVNTU9jY2IBKpcL29jY++uijuLJE9Ho91tbW2I+3t7cP1Zsg
      IyMDarWacy19IFIQzGw2o7OzE+Pj45DL5RgaGooZAHg8HmZmZmC32+F2u7GxsYH+/v64Zj5A
      JIvn/v376OzsRDAYxNjYGN5//312NvMyLS0tsNlsABB14I1rGXKmdzSTPMBU0VQqldjd3X2t
      A8DroqioCDqdDjKZDIFAADqdjtNNB5/PR35+Ptv8yGazQSAQxF3T/7AePnyI0tJSBAIB3Llz
      BydOnMCZM2dw586dmBvoKRkAgEhNlpmZmag38NmzZ+MKAkDkwpCTk8M5i+V1YLfbUVBQgI8/
      /jjq8Vh3A1NTUxgeHsa1a9fYC9jXX38d9wtZJpNFLddUV1cf2VSeaSrO3M0zTX1iUavV6Orq
      euFSWzybeEywGh4ehlAoRHd3N6RSKdRq9YEXcqlUeqgWlAxm3KFQCLm5uRAIBGz558OUAk9H
      LS0tGB4exuzsLPx+PzQaTcy9o/2sVisePXoElUoFn88Ht9uNd955J+GbwDs7O6iurkYoFMLI
      yAgqKyshkUggl8vhdrsPTGNOyQAQDAbR39+Ptra2qI3XdLkLstvtmJmZQXd3d1xLR5WVlXC7
      3RgZGcHMzAwqKyvZioLxfB/mYhYKheByubCwsACv1xvXnfxhVVRU4O7du3A6nbDZbOjv7+eU
      CZKVlRVXv4iDKBSKqB7Ifr8/rmyUw5BKpfjyyy8BRJYEent72eAXzxmQdOZ0OtHU1MQWTWT2
      8LhmUf3000/o6elhbzIXFhbw/PnzI9sHYJa+mdk6l1LoKRkAgMi6YklJye9iyea3plarsbS0
      BJ1Ox+YhZ2RkxFzGEYlEaGtrQ1tbGywWC6anp7G3t4dvv/0WLS0tnC+QTqcTs7OzmJ+fh9Pp
      REtLy5HNAI4dO4b3338fMzMzKCgogFqtjmrukmhjY2OYn5+Puus6ffr0oUtzc7U/4JDDGR0d
      xerqKrq6ulBYWAiv14unT59yKicORALG/vcYMwtLtFAohP/9738AIhl8d+7cAZ/Ph8ViiTmD
      4YVf5bTUayYcDrONNbRaLdRqddS6q0QiSeqJx6NiNpvx6NGjqI1NtVp9qP4CwWAQDocDHo8n
      5mEYg8GAp0+fgs/no7q6GmKxGCsrK0d6EGlnZwcLCwtsJ6hwOIzx8XHOfWFf1RdffPFKbRBJ
      8jx48ABVVVVsL42ysjIMDQ1xDgAGgwFPnjxBWVkZ/H4/VldXo2YEieLz+V64V8UkMaTNHkAo
      FGLrwAPA6uoqWxMGiPQKiOdQ0e+VUqmMyotm8qwPg8/ncy6mZTabEQgEUF1djfLycrYfwFFi
      zk1sbm7izTffhFAohF6vP7IAUFZWhtXV1ZhnHsjrKScnBz09PRgZGUF/f39cy8YajYbNIOPz
      +WhrazuSG4F4Ust/KaUCAHMSMoUmNYcWCoVgs9kwOzuLlZUVVFRUxDwU8qqamppw8uRJLC0t
      4bvvvoPb7YZIJILT6UROTs6R5aKfOXMGRUVFuHPnzgtrOyVSVlYWent7ow7/NDU1xVURlCRH
      bW0txGIxMjIy0NbWBqPRyKmXA9MHw2q1st9jdnYWPB4PZWVlr/UZjJRaAmKEw2E8ePCAbagS
      CoXYvsC1tbU4efLka/2kHBazBKbT6bC5uQmRSITNzU389a9/faW7hMNiNoBXVlZQX19/JHfF
      RqMRW1tbaGpqwt7eHvr7+2E2m/H3v/894T+b/L799NNPqKioiHu/am1tDSMjI6ioqMD29jZc
      LhdaW1sxODiIq1evHulhtnilZAAIhULo7e1FV1cX+Hw+QqEQ+vr60NHRge+//x5vv/12SmYE
      GY1G3L59G93d3WxT9tu3b/8mPQpexVGWJWCylpjN/2AwCJvNdmRvwmAwiOnpabb+UjAYRGVl
      JadiYiS5jEYjtFot3nnnnbiWboaHh1FYWAiNRoPvvvsOGo0GdXV1mJycBPDqdaISKaWWgPYL
      BAJsn9L9LdfEYnFcbdZ+T5RKJVpaWjA1NYW5uTnU1ta+FjngzN/+KDBBxu/3Y3FxERMTE2x/
      26MwPj4Ol8uFzc1NNDc3Y3p6+tD7L+RoMa0s//vf/7KZY6WlpTHTl/1+P1u8TiaTsZu+QqEw
      qhz96yglAwCPx2PzwU+dOsXWahcKhfB6vUd2Qu+oCYVCtLa2IhwOw+VyYXJyEm63G9999x3q
      6uqONB3yqIXDYbYRzMLCAux2O2w2G/72t78dSTVGxvr6Oq5du4bBwUEUFBRAoVDg6dOnMQ/h
      keSTSCS/6qnLJWmEx+PhyZMnOHbsGIxGI9bX1zE7Owubzca5gGKypOQSEBC5IGxsbMBgMEAm
      k6G8vBwCgQAOh4NTn85UEQ6HYbFY4HQ6E56LnkxWqxVfffUV6urq2JOQt2/fxs2bN4/0uR4c
      HGQzoPx+PxQKBaamptDd3X1kYyCH53A4sLi4CI1Gg0AgALlcHnP/zO12s41YfkkikRy629dR
      SKkA4PP58PDhQ7z11lvo6+tDZ2dnUjY/ydHzeDx49OgRHA4HCgoKUFFRgcHBQXz00UdHGgA8
      Hg/8fj/EYjHbnvFVuquRo7OysoLR0VEUFhZCLBZDqVRibW3t0I2Rfg9SagkoIyMDFosFRqMR
      Ozs7MJvNUcs9MpksZZd/0l12dja6u7sRCASwubmJqakpmM1mDAwMoLGxkXNjl1clFAqRnZ2N
      cDiMuro6HDt2jA6F/U6Mj4/jgw8+wNbWFkwmE/Lz8zE2NpbsYSVUSs0AmMbIExMTGBsbQ21t
      bVQpiJaWlrQ4CEb+rzja5uYmtre3UV9fn9Cf5/f78dlnnyEcDqPjyOhkAAAG4klEQVSyshJ2
      ux2BQABbW1u4efMmve5+B548eQKJRAKpVAqTyYSMjAy43e4jrel/1FIqADDC4TBWVlag0WjY
      AMD8mumy9k+O1sLCAqxWK1paWtDf3w8+n48rV65gbm4Ou7u7OHfuXLKHSGIIBoP48ccfYTAY
      4PP5UFpaiosXL6b0MnJKzk2ZE3jhcJjd1FleXkZHR8eRLQWQ9OJwOCCXy8Hj8ZCfn8+mGsvl
      chiNxiSPjnDBVBJIJykXAJi6NzMzM5iZmYHNZkNVVRW6urqQm5ub7OGRFMUsP5pMJrhcLvj9
      fphMJrbJC3l9ra6u4sGDB+zH+8ufnz179rU+yPWqUm4JaGBggG0BWFNTg8nJSeTm5lItFpJQ
      JpMJOp3uhZ+rqalJ6TMYqWRxcRE2m+03aeP6e5ByMwClUgmr1YqNjQ0oFIq4W/oRchjHjx//
      zRrKEHJUUi4A1NfX48yZM7BardDpdFhcXIRMJoNAIIjaFCaEkHSXcktAvxQMBmGxWDA3N4e6
      ujrIZLJkD4kQ8hrZ3t5ml+8sFgv29vbY+j8VFRUpXcYj5QMAIYQcxOPxwGq1vvBzEokkpZNH
      KAAQQkiaSnyBdkIIIa+llNsEJoSQePj9/pdmCwoEgpSu5ZS6vxkhhHDw/PlzGI1GWK1WiEQi
      iEQiAGBLeyS6jlQyUQAghKS11tZWAEBvby+uXLnCBgCLxYLx8fFkDi3haA+AEEIQKeW9v3SH
      UCiEw+FI4ogSj7KACCEEkc5et2/fRkVFBQQCAWZnZ9HR0RGzJ/DvGQUAQgj5/3w+H9bW1hAK
      hVBQUJDSZwAACgCEEAIgkg20srICn8/HPnb8+HEolcokjiqxaBOYEEIADA0NgcfjpVXPEAoA
      hBACYHd3F9euXUvpDmC/RFlAhBACoKGhAWNjYwiHw1H/UhnNAAghBIDX68XS0hL0ej37WH19
      PWpqapI4qsSiTWBCCElTNAMghBBEykIPDAzAYrFALBbD7Xajra0N1dXVyR5awlAAIIQQAE+f
      PsXJkycxNzeH9vZ2LC8vIxQKJXtYCUWbwIQQAsDhcKCwsBBisRjBYBDV1dVYXFxM9rASimYA
      hBACoKSkBHq9HpWVlfjhhx+Ql5eHnJycZA8roWgTmBBC9gmHw9jc3MTu7i4qKyuRkZG6CyUU
      AAghJE2lbmgjhBByINoDIIQQRJZ+LBZLVE8ApVIJuVyexFElFgUAQggBsLCwAJ1OB4fDgVOn
      TmFhYQGtra0pHQBoCYgQQgDMzc3hvffeg0ajQX19Pd57772oshCpiAIAIYQAyM3Nhc1mg0ql
      gsFgABDpEpbKKAuIEEIA2O12eDwe5OXl4f79+3A6nejo6EBBQUGyh5YwFAAIISRN0SYwISSt
      6fV6+P1+CAQCTE1NRX2utrYW5eXlSRpZ4tEMgBCS1jweD0KhEAQCATweT9TnhEIhhEJhkkaW
      eDQDIISktezsbACRcwA+ny/lK4DuRwGAEEIA6HQ6zMzM4NixY+xjNTU1Kb0ERAGAEEIQOQj2
      4YcfQiBIn8sinQMghBAAVVVVWF5eTvYwjlT6hDpCCDlAVlYW7t27h+fPn7OP1dfXo7a2Nomj
      SizKAiKEkDRFS0CEEILISWCTyYRwOIyhoSHcuXMHTqcz2cNKKAoAhBAC4NmzZ+Dz+bDZbNjZ
      2UFrayuGh4eTPayEogBACCEAfD4fxGIxJicncebMGUil0l8dDEs1FAAIIQRAQ0MDPv/8c2xs
      bECtVmNxcREajSbZw0oo2gQmhBBETgIDQDAYBADw+XwAAI/HS9qYEo3SQAkhBJEA0NfXB6vV
      CgCQyWTo7u5mA0EqohkAIYQAGBwchFKpRG1tLXg8HhYWFrC6uoorV64ke2gJQ3sAhBACwGQy
      obKykl3yKSkpiWoQn4poBkAIIYjUApqZmUFLSwt4PB60Wi00Gg1OnTqV7KElDAUAQghBZA9g
      ZWUFc3NzACK1gcrKylJ6E5gCACEk7fn9fuzu7kImkyEYDGJ9fR0ymQxSqTTZQ0soCgCEkLQW
      DAbx73//G3K5HCKRCIFAANnZ2TAYDHj33XeRl5eX7CEmDG0CE0LSml6vR1VVFd59910IBALw
      +XxcvnwZly9fxvT0dLKHl1AUAAghac3pdEIikYDH40GlUrEdwaRSKVwuV5JHl1h0EIwQktbC
      4TDW19chEAiwtbUFp9OJ+fl5uFwupPoKOe0BEELSmtVqxfz8/As/p1arUVxcfMQjOjoUAAgh
      JE3RHgAhhKQpCgCEEJKmKAAQQkiaogBACCFpigIAIYSkKQoAhBCSpigAEEJImqIAQAghaYoC
      ACGEpCkKAIQQkqYoABBCSJqiAEAIIWnq/wECEnqcaVvdaQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='358' name='horizontal chart: ' width='384'>
      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
      LRe9NwDuvf0DuG77FBQUcPr06TZPYj5oiYmJQP1qpc2bN+Pj49Mp+3V+7s593+927TFo0CDy
      8vLw8fFhw4YNDeYkWjJs2DCGDRvGN7/5TWw2GwkJCWzfvp3q6mo+/PBDXnjhhQ7Vv5smgUXa
      6Pjx466zyW9961u8/PLLjf63cOFCoH4i9dSpUw324zzLz8zM5OrVq66J3nvP/sF9nuEnP/kJ
      aWlpronH8+fP89vf/rbJ/t68eZNTp05x6tQpsrOz2/lTt43zlpWvr2+Dwb+urq5dzypUVlay
      detWoH6epam5ic5q116PPvooUL8c9K9//WuT9b744gvXvyOLxdLofEHPnj157rnnXCFSVFTU
      rvpNUQCItNG9T/825e4neO9d7QN/Xw1UV1fHG2+84RoMmgoA55VGQUEB//qv/8qMGTN44okn
      eO6559xuH937uoHk5GReeuklXnrpJX7zm9+07ofsoIEDBwL1g1xiYiKVlZVYLBaSkpJYsmSJ
      6/1JTamqqmL//v3k5OSQl5fHoUOHWLZsGTdu3ABg4cKFrmN0RrvOtGLFCtcA/Itf/IIdO3aQ
      m5tLbW0t169f59ChQ7z44ov88z//M1VVVQB8/vnnLFu2jJdffpmPP/7Y9YqPgoICtm7d6npb
      aWRkZLvqN0W3gETawGazkZqaCvz96d+mDBkyhCFDhpCTk0NKSgp2u93tbDgyMpKhQ4dy7do1
      PvnkE6Dx2z9OGzdu5D//8z85ceIEUH+GCfUTnI8//jh/+ctfOuVn7AyzZ892hd5//dd/8bOf
      /cxtxY+vr69rHXtjqquree211xotGzx4MC+++GKntutMJpOJF198kU2bNlFTU8O2bdtcD221
      5NixY65w7N27t+v/MdTf87/35KCt9e+lKwCRNjhz5oxr4Lr74a+mOG/dWK1Wzp8/36D83l/Q
      5n5hg4KCePPNN3n33Xd55ZVX+Jd/+Rd++tOf8sEHHzB//nxXvXuX/z30UNvO8+6u31zb5u7r
      z5kzh29+85uuvjjfyRMTE8Nbb73lWlnU3P7v/YIZf39/nnnmGXbv3u16zqIz292rpc/h7mcc
      7i1/9tlnefvtt4mMjGzwLESPHj2YOXMmb731lutKYfz48fzoRz9yW65692A+adIkNm/eTL9+
      /dpVvyleDr2zVjxYeno6gOvhGk9jtVrdHkx69NFH2/Ve+t///veuJ3bffffdRl961hVu3brF
      pUuX8PLyYuzYsS0OwD/5yU/485//TJ8+fTh8+DAWi4Xr16/Tp08fhg4d2uTa9va2exBsNhtm
      sxm73U5wcDCPPPJIs+FZWFjIzZs3KSgoICAggMGDBxMaGtqh+qmpqY0+/6BbQCJdqG/fvi0u
      FYT6lUfHjx9n5syZDW47ZWVlsWPHDqD+rLyl+74P0oABAzq07DI4ONjtIbr73e5+6NmzZ5sm
      nk0mEyaTqVPr//a3vyUjI6PBdgWAiAe4fv06r732Ghs3bmTcuHEMHDgQu93OqVOn3F4DsGzZ
      sgZvtRRZvnx5o7cXFQAiHsB5y8Bms7kmge81c+ZM1/vrRe527+tKnBQAIh4gJiaG/fv3k5KS
      wsWLFykqKsJqtWIymRg0aBDTp09v1a2kL7thw4YxcuTIZldXdWY7o9MksHg0T58EFulKWgYq
      ImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDOr/A9mTapLJ4sP+AAAA
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
